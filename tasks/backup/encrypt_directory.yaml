---
- name: Encrypt Directory
  block:

    - name: Tar and Encrypt directory
      ansible.builtin.shell: |
        tar -czf {{ directory_tasks }}/{{ file_backup_no_extension }}.tar.gz \
          --acls \
          --xattrs \
          {%- for exclude_path in container.excludes | default([]) %}
          --exclude="{{ exclude_path }}" \
          {%- endfor %}
          {{ directory_temp_destination }}; \
        openssl \
          smime -encrypt -binary -text -{{ backup.encryption_algorithm }} \
          -in {{ directory_tasks }}/{{ file_backup_no_extension }}.tar.gz \
          -out {{ directory_tasks }}/{{ file_backup_no_extension }}-{{ backup.encryption_algorithm }}.enc.tar.gz \
          -outform DER {{ directory_tasks }}/encryption_certificate;
        rm -f {{ directory_tasks }}/{{ file_backup_no_extension }}.tar.gz;

      args:
        executable: /bin/bash
      changed_when: false
      become: true
      register: backup_data
      failed_when: >
        'Exiting with failure' in backup_data.stderr
          or
        'Unable to' in backup_data.stderr
          or
        'could not' in backup_data.stderr
          or
        'Exiting with failure' in backup_data.stderr


    - name: Set Encrypted Backup Permissions
      ansible.builtin.file:
        name: "{{ directory_tasks }}/{{ file_backup_no_extension }}-{{ backup.encryption_algorithm }}.enc.tar.gz"
        owner: root
        group: backup
        mode: '0740'
        state: file
      become: true


  rescue:


    - name: Remove Task Temp Files
      ansible.builtin.file:
        name: "{{ directory_tasks }}/{{ file_backup_no_extension }}-{{ backup.encryption_algorithm }}.enc.tar.gz"
        state: absent
      become: true


  always:


    - name: Remove Task Temp Files
      ansible.builtin.file:
        name: "{{ directory_tasks }}/{{ file_backup_no_extension }}.tar.gz"
        state: absent
      become: true
