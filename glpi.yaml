---
#
# No Fuss Computing
# https://gitlab.com/nofusscomputing/projects/ansible/ansible_playbooks
#
# Documentation: https://nofusscomputing.com/projects/ansible/playbooks
#
# image: nofusscomputing/ansible-ee >= 0.3.0
#
#
- name: GLPI
  hosts: localhost
  become: false
  gather_facts: false


  pre_tasks:


      # Play and task set time
    - name: Set Start Time
      ansible.builtin.set_fact:
        nfc_task_starttime: "{{ ('%Y-%m-%dT%H:%M:%S %z' | strftime) | string }}"
      no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
      when: nfc_automation is not defined
      tags:
        - always


    # Setup dictionary 'nfc_automation'
    - name: Set Automation Facts
      ansible.builtin.set_fact:
        nfc_automation: {
          "error": 0,
          "time": {
            "start": "{{ nfc_task_starttime | string }}",
            "end": 0
          }
        }
      no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
      when: nfc_automation is not defined
      tags:
        - always


    # Setup dictionary 'nfc_task'
    - name: Set Automation Facts
      ansible.builtin.set_fact:
        nfc_task: {
          "name": "{{ ansible_play_name | default('') | lower | string }}",
          "roles": "{{ ansible_play_role_names | default('') | string }}",
          "skip_tags": "{{ ansible_skip_tags | default([])| list }}",
          "start": "{{ nfc_task_starttime | string }}",
          "tags": "{{ ansible_run_tags | default([]) | list }}"
        }
      no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
      tags:
        - always


    - name: Block - pre_tasks
      block:


        - name: Ensure Job Tags have been Specified
          ansible.builtin.assert:
            that:
              - ansible_run_tags | default([]) | list | length | int > 0
            msg: This playbook requires job tags be set.
          tags:
            - always


        - name: Validate User for ticket assignment on error
          ansible.builtin.assert:
            that:
              - nfc_pb_glpi_ticket_assign_error_user | int > 0
          when: nfc_pb_glpi_ticket_assign_error_user is defined
          tags:
            - always


      rescue:

          # there was an error, set error object
        - name: Set error fact
          ansible.builtin.set_fact:
            nfc_automation: "{{ nfc_automation | combine({
                'error': 1
              }) }}"
          no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
          tags:
            - always


      always:


          # Check if error occured and fail task
        - name: Error Check
          ansible.builtin.assert:
            that:
              - nfc_automation.error | int == 0
            msg: Error occured, Fail the play run
          tags:
            - always


    # Don't use the 'roles' section.
  roles: []
    # if the included role(s) do not contain a rescue block, the playbook may stop
    # executing in this section (roles) with the post_tasks not running. This will
    # cause the artifacts to be incomplete. It's recommended to include your roles
    # in section(s) 'pre_tasks', 'tasks' or 'post_tasks' and from within a block with
   # rescue so that the playbook can complete and ensure that all artifacts are set.


  tasks:


    - name: Block - tasks
      block:

          # Check for error and fail play on error
        - name: Error Check
          ansible.builtin.assert:
            that:
              - nfc_automation.error | int == 0
            msg: Error eccured, follow error path to fail play
          tags:
            - always


        - name: "[Plugin] FormCreator to JSON"
          ansible.builtin.include_tasks:
            file: tasks/glpi/plugin-formcreator-to-json.yaml
            apply:
              tags:
                - always
          tags:
            - plugin_form_fetch_json


        - name: Fetch Ticket Template From ITIL Category
          ansible.builtin.include_tasks:
            file: tasks/glpi/tickets/template-from-itil-category.yaml
            apply:
              tags:
                - always
          tags:
            - ticket_template_from_itil_category


        - name: Create GLPI Ticket
          ansible.builtin.include_tasks:
            file: tasks/glpi/tickets/create.yaml
            apply:
              tags:
                - always
          tags:
            - ticket_create


        - name: Create GLPI Ticket Task
          ansible.builtin.include_tasks:
            file: tasks/glpi/tickets/task_create.yaml
            apply:
              tags:
                - always
          tags:
            - ticket_task_create


        - name: "[Plugin] FormCreator Delete Answers"
          ansible.builtin.include_tasks:
            file: tasks/glpi/plugin-formcreator-delete-form.yaml
            apply:
              tags:
                - always
          tags:
            - plugin_form_delete_answer


        - name: Close GLPI Ticket Task
          ansible.builtin.include_tasks:
            file: tasks/glpi/tickets/close.yaml
            apply:
              tags:
                - always
          tags:
            - ticket_close

      rescue:


          # there was an error, set error object
        - name: Set error fact
          ansible.builtin.set_fact:
            nfc_automation: "{{ nfc_automation | combine({
                'error': 1
              }) }}"
          no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
          tags:
            - always


      always:


          # Check if error occured and fail task
        - name: Error Check
          ansible.builtin.assert:
            that:
              - nfc_automation.error | int == 0
            msg: Error occured, Fail the play run
          tags:
            - always


  post_tasks:

    - name: Tasks post_task
      block:


          # Check for error and fail play on error
        - name: Error Check
          ansible.builtin.assert:
            that:
              - nfc_automation.error | int == 0
            msg: Error occured, follow error path to fail play
          tags:
            - always


        ########################################################################
        #
        # Your tasks here
        #
        ########################################################################


      rescue:


          # there was an error, set error object
        - name: Set error fact
          ansible.builtin.set_fact:
            nfc_automation: "{{ nfc_automation | combine({
                'error': 1
              }) }}"
          no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
          tags:
            - always


      always:


          # Task and automation end time.
        - name: Fetch End time
          ansible.builtin.set_fact:
            nfc_task_endtime: "{{ '%Y-%m-%dT%H:%M:%S %z' | strftime }}"
          no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
          tags:
            - always


          # Set task end time
        - name: Set task Facts
          ansible.builtin.set_fact:
            nfc_tasks: "{{ nfc_tasks | default([]) + [ nfc_task | combine({
                'end': nfc_task_endtime | string
              }) ] }}"
          no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
          tags:
            - always


          # Set Automation end time.
          # every playbook must set this variable so that the end time
          # is equal to the fail time or the end of a group of playbooks.
        - name: Set automation end time
          ansible.builtin.set_fact:
            nfc_automation: "{{ nfc_automation | combine({
                'time': nfc_automation.time | combine({
                  'end': nfc_task_endtime | string
                })
              }) }}"
            nfc_task_endtime: null
          no_log: "{{ nfc_pb_no_log_setup_facts | default(false) | bool }}"
          tags:
            - always


          # Set the artifacts as a fact for subsequent playbook useage
          # Note: variable 'per_host' must be 'false' so that the artifacts
          # work within AWX / Ansible Automation Platform.
        - name: Create Automation Artifact
          ansible.builtin.set_stats:
            data:
              nfc_automation: "{{ nfc_automation }}"
              nfc_tasks: "{{ nfc_tasks }}"
            per_host: false
          tags:
            - always


        - name: Assign ticket to specified user due to error
          ansible.builtin.include_tasks:
            file: tasks/glpi/api-create.yaml
          vars:
            glpi_api_create_name: Assign ticket to specified User due to error
            glpi_api_create_path: Ticket/{{ nfc_pb_glpi.ticket.id | int }}/Ticket_User
            glpi_api_body: {
              "tickets_id": "{{ nfc_pb_glpi.ticket.id | int }}",
              "users_id": "{{ nfc_pb_glpi.ticket.error_user }}",
              "type": 2,
              "use_notification": 1
            }
          tags:
            - always
          when: >
            (
              nfc_automation.error | int == 1
            )
              and
            nfc_pb_glpi.ticket.error_user is defined
              and
            nfc_pb_glpi.ticket.id is defined


          # Final error check to fail the entire play run on error
        - name: Error Check
          ansible.builtin.assert:
            that:
              - nfc_automation.error | int == 0
            msg: Error occured, Fail the play run
          tags:
            - always


  vars:


    nfc_pb_awx_tower_template:
      - name: "ITIL/GLPI/Plugin/FormCreator/Delete/Form_Answer"
        ask_credential_on_launch: true
        ask_inventory_on_launch: true
        ask_tags_on_launch: false
        ask_variables_on_launch: true
        concurrent_jobs_enabled: true
        description: |
          Delete A Form Creator Form Answer.
        execution_environment: "No Fuss Computing EE"
        extra_vars:
          nfc_pb_glpi_plugin_formcreator_delete_id: 0
        job_tags: plugin_form_delete_answer
        job_type: "run"
        labels:
          - delete
          - forms
          - glpi
          - itsm
          - plugin
          - service_catalog
          - ticket
        survey_enabled: false
        use_fact_cache: false
        verbosity: 2

      - name: "ITIL/GLPI/Plugin/FormCreator/to_JSON_Object"
        ask_credential_on_launch: true
        ask_inventory_on_launch: true
        ask_tags_on_launch: false
        ask_variables_on_launch: false
        concurrent_jobs_enabled: true
        description: |
          Fetch Form Creator Form and create JSON Object.
          Optionaly add to ticket task body as string.
        execution_environment: "No Fuss Computing EE"
        extra_vars:
          nfc_pb_glpi_form_to_ticket: false
          nfc_pb_glpi_ticket_task_category: 0
        job_tags: ticket_template_from_itil_category,ticket_create,ticket_task_create
        job_type: "run"
        labels:
          - forms
          - glpi
          - itsm
          - plugin
          - service_catalog
          - ticket
        survey_enabled: false
        use_fact_cache: false
        verbosity: 2

      - name: "ITIL/GLPI/Ticket/Close"
        ask_credential_on_launch: true
        ask_inventory_on_launch: true
        ask_tags_on_launch: false
        ask_variables_on_launch: false
        concurrent_jobs_enabled: true
        description: |
          Close a Ticket in GLPI.
          NOTE: Requires first that the ticket creation job has already run.
        execution_environment: "No Fuss Computing EE"
        job_tags: ticket_close
        job_type: "run"
        labels:
          - close
          - glpi
          - itil
          - itsm
          - ticket
        survey_enabled: false
        use_fact_cache: false
        verbosity: 2

      - name: "ITIL/GLPI/Ticket/Create"
        ask_credential_on_launch: true
        ask_inventory_on_launch: true
        ask_tags_on_launch: true
        ask_variables_on_launch: true
        concurrent_jobs_enabled: true
        description: |
          Create a Ticket in GLPI.
          Available tags:
            'ticket_template_from_itil_category' Optional Tag to fetch ticket templete from itil category,
            'ticket_create' Create ticket.
          A Tag MUST be set.
        execution_environment: "No Fuss Computing EE"
        extra_vars:
          nfc_pb_glpi_itil_category: 0
          nfc_pb_glpi_ticket_type: request
          nfc_pb_glpi_ticket_create:
            name: 'Ticket Title'
            content: 'Ticket Dscription'
        job_tags: ticket_template_from_itil_category,ticket_create
        job_type: "run"
        labels:
          - create
          - glpi
          - itil
          - itsm
          - ticket
          - template
        survey_enabled: false
        use_fact_cache: false
        verbosity: 2

      - name: "ITIL/GLPI/Ticket/Task/Create"
        ask_credential_on_launch: true
        ask_inventory_on_launch: true
        ask_tags_on_launch: true
        ask_variables_on_launch: true
        concurrent_jobs_enabled: true
        description: |
          Create a Ticket Task in GLPI.
          Available tags:
            'ticket_template_from_itil_category' Optional Tag to fetch ticket templete from itil category,
            'ticket_create' Create ticket.
            'ticket_task_create' Create a Ticket task from the created or specified ticket
          A Tag MUST be set.
        execution_environment: "No Fuss Computing EE"
        extra_vars:
          nfc_pb_glpi_itil_category: 0
          nfc_pb_glpi_ticket_type: request
          nfc_pb_glpi_ticket_create:
            name: 'Ticket Title'
            content: 'Ticket Dscription'
          nfc_pb_glpi_ticket_task_create:
            id: 0
            taskcategories_id: 1,
            tickets_id: 0
            content: "Created Ticket Task via AWX"
        job_tags: ticket_task_create
        job_type: "run"
        labels:
          - create
          - glpi
          - itil
          - itsm
          - ticket
          - template
        survey_enabled: false
        use_fact_cache: false
        verbosity: 2

      - name: "ITIL/GLPI/Ticket/Assign/Error"
        ask_credential_on_launch: true
        ask_inventory_on_launch: true
        ask_tags_on_launch: false
        ask_variables_on_launch: true
        concurrent_jobs_enabled: true
        description: |
          Create a Ticket Task in GLPI.
          The always tag must be specified for this task to run.
        execution_environment: "No Fuss Computing EE"
        extra_vars:
          nfc_pb_glpi_ticket_assign_error_user: 0
        job_tags: always
        job_type: "run"
        labels:
          - assign
          - error
          - glpi
          - itil
          - itsm
          - ticket
          - template
        survey_enabled: false
        use_fact_cache: true
        verbosity: 2

      - name: "ITIL/GLPI/Ticket/Template/From_ITIL_Category"
        ask_credential_on_launch: true
        ask_inventory_on_launch: true
        ask_tags_on_launch: false
        ask_variables_on_launch: true
        concurrent_jobs_enabled: true
        description: |
          Using the ITIL Category Fetch the ticket template id then build a default
          template. Also Returns Mandatory fields for validation usage when creating
          the ticket.
        execution_environment: "No Fuss Computing EE"
        extra_vars:
          nfc_pb_glpi_itil_category: 0
          nfc_pb_glpi_ticket_type: request
        job_tags: ticket_template_from_itil_category
        job_type: "run"
        labels:
          - glpi
          - itil
          - itsm
          - ticket
          - template
        survey_enabled: false
        use_fact_cache: false
        verbosity: 2
        credential_types:

          - name: playbook/glpi/api
            description: A Credential type for No Fuss Computings Public Playbooks glpi.yaml
            inputs: |
              fields:
                - id: host
                  type: string
                  label: GLPI FQDN
                  secret: false
                - id: app_token
                  type: string
                  label: GLPI APP Token
                  secret: true
                - id: user_token
                  type: string
                  label: GLPI User Token
                  secret: true
              required:
                - host
                - app_token
                - user_token
            injectors: >
              extra_vars:
                nfc_pb_glpi_host: '{{ host }}'
                nfc_pb_glpi_app_token: '{{ app_token }}'
                nfc_pb_glpi_user_token: '{{ user_token }}'
